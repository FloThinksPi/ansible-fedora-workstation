---

- name: Upgrade all packages
  dnf:
    name: "*"
    state: latest

- name: Install Generel Development Tools
  dnf: name={{ item }} state=installed
  with_items:
  - "@development tools"
  - kernel-devel
  - git
  when: install_dev_general

- name: Install Ansible Development Tools
  dnf: name={{ item }} state=installed
  with_items:
  - ansible-lint
  - ansible
  when: install_dev_ansible

- name: Install C,C++,C# Development Tools
  dnf: name={{ item }} state=installed
  with_items:
  - "@C Development Tools and Libraries"
  - automake
  - gcc
  - gcc-c++
  - cmake
  when: install_dev_C

- name: Install GoLang Development Tools
  dnf: name={{ item }} state=installed
  with_items:
  - golang
  - golang-godoc
  - golang-gotype
  - gotags
  when: install_dev_go

- name: Install Python Development Tools
  dnf: name={{ item }} state=installed
  with_items:
  - python3
  - python
  - python3-devel
  - python-devel
  when: install_dev_python

- name: Install Java / Android Development Tools
  dnf: name={{ item }} state=installed
  with_items:
  - java-1.8.0-openjdk
  - java-1.8.0-openjdk-devel
  - android-tools
  when: install_dev_java

- name: Install additional Tools
  dnf: name={{ item }} state=installed
  with_items:
  - restic
  - gnome-tweak-tool
  when: install_nice_tools

- name: Install Linux Basics
  dnf: name={{ item }} state=installed
  with_items:
  - acpi
  - autofs
  - crypto-utils
  - dnf-plugins-extras-common
  - dnf-plugins-extras-kickstart
  - dnf-plugins-extras-repoclosure
  - dnf-plugins-extras-repograph
  - dnf-plugins-extras-show-leaves
  - dnf-plugins-extras-tracer
  - fwupdate
  - htop
  - nmon
  - inotify-tools
  - lm_sensors
  - lshw
  - lsscsi
  - ltrace
  - nmap
  - psmisc
  - rpm-ostree
  - screen
  - smartmontools
  - speedtest-cli
  - strace
  - jq
  - tmux
  - tmuxinator
  - tuned
  - tuned-utils
  - tuned-utils-systemtap
  - vim-enhanced
  - whois
  - p7zip
  - p7zip-plugins
  - unrar
  - unzip
  when: install_linux_basics

- name: Install RPM packager packages
  dnf: name={{ item }} state=installed
  with_items:
  - blender-rpm-macros
  - erlang-rpm-macros
  - fedmsg
  - fedora-review
  - fedora-review-tests
  - firewalld-filesystem
  - ghc-rpm-macros
  - ghc-rpm-macros-extra
  - ghc-srpm-macros
  - gnat-srpm-macros
  - go-srpm-macros
  - gofed
  - gofed-build
  - gofed-scan
  - kernel-rpm-macros
  - kf5-rpm-macros
  - mock
  - nodejs-packaging
  - ocaml-srpm-macros
  - perl-macros
  - perl-srpm-macros
  - python-fedmsg-meta-fedora-infrastructure
  - python-macros
  - rpm-apidocs
  - rpm-build
  - rpm-devel
  - rpmconf
  - rpmconf
  - rpmdevtools
  - rpmgrill
  - rpmlint
  - rpmorphan
  - rpmreaper
  - scl-utils-build
  - sip-macros
  - web-assets-devel
  - "@fedora-packager"
  when: install_packager

- block:

  - name: Uninstall Possible Docker Installs
    dnf: name={{ item }} state=removed
    with_items:
    - docker
    - docker-client
    - docker-client-latest
    - docker-common
    - docker-latest
    - docker-latest-logrotate
    - docker-logrotate
    - docker-selinux
    - docker-engine-selinux
    - docker-engine

  - name: Install Docker-CE
    dnf: name={{ item }} state=present
    with_items:
    - docker-ce
    - docker-compose

  when: install_dockerce

- name: Install thermald
  dnf: name={{ item }} state=installed
  with_items:
  - thermald
  when: is_laptop

- name: Install Powerline
  dnf: name={{ item }} state=installed
  with_items:
  - powerline
  - powerline-fonts
  - vim-powerline
  when: install_powerline

- name: Install extra fonts
  dnf: name={{ item }} state=installed
  with_items:
  - adobe-source-code-pro-fonts
  - dejavu-sans-fonts
  - dejavu-sans-mono-fonts
  - dejavu-serif-fonts
  - gnu-free-fonts-common
  - gnu-free-mono-fonts
  - gnu-free-sans-fonts
  - gnu-free-serif-fonts
  - levien-inconsolata-fonts
  - liberation-fonts-common
  - liberation-mono-fonts
  - liberation-sans-fonts
  - liberation-serif-fonts
  - mozilla-fira-mono-fonts
  - msimonson-anonymouspro-fonts
  - overpass-fonts
  - terminus-fonts
  when: install_extra_fonts

- name: Install Multimedia Codecs and Tools
  dnf: name={{ item }} state=installed
  with_items:
  - "@multimedia"
  - ffmpeg
  - vlc
  when: install_non_free_mediacodecs

- name: Install Flameshot
  dnf: name={{ item }} state=installed
  with_items:
  - flameshot
  when: install_flameshot
